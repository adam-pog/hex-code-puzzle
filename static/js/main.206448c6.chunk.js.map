{"version":3,"sources":["config.js","HexRow/Hex/Hex.js","HexRow/HexRow.js","Buffer/Buffer.js","Objective/Objective.js","Subroutines/Subroutines.js","App.js","index.js"],"names":["config","rows","columns","selectedChar","bufferLength","Hex","props","className","hexClass","onClick","row","col","textClass","value","bottomHexClass","column","highlightCol","topHexClass","HexRow","highlightRow","hexValues","map","hexValue","highlightColClass","hoverable","key","Buffer","Array","fill","_","i","buffer","length","Objective","animateClass","failed","success","objective","highlightClass","progress","Subroutines","subroutines","subroutine","subroutineIndex","terminateClass","terminate","subroutinesProgress","valueIndex","highlight","App","state","initialState","board","this","generateBoard","primaryObjective","generatePrimaryObjective","primaryObjectiveProgress","generateSubroutines","failure","setState","randomHex","randomIndex","Math","floor","random","toString","toUpperCase","padStart","availableIndices","row1","row2","filter","n","subroutineLength","ceil","slice","selection","refreshHighlights","calcObjectiveProgress","push","calcSubroutineProgress","params","particles","number","density","enable","color","line_linked","width","maxWidth","hexClick","data-text","reset","minWidth","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.206448c6.chunk.js","sourcesContent":["const config = {\n  rows: 5,\n  columns: 5,\n  selectedChar: '\\u2022',\n  bufferLength: 6\n}\n\nexport default config;\n","import React from 'react';\nimport './Hex.css';\nimport config from '../../config'\n\nfunction Hex(props) {\n  return (\n    <td\n      className={\"Hex \" + props.hexClass}\n      onClick={() => props.onClick && props.onClick(props.row, props.col)}\n    >\n      <p className={props.textClass}>{props.value || config.selectedChar}</p>\n    </td>\n  );\n}\n\nexport default Hex;\n","import React from 'react';\nimport './HexRow.css';\nimport Hex from './Hex/Hex'\nimport config from '../config'\n\nfunction bottomHexClass(props, column) {\n  if(props.highlightCol === column && props.row === config.rows - 1) {\n    return 'bottomHex '\n  } else {\n    return ''\n  }\n}\n\nfunction topHexClass(props, column) {\n  if(props.highlightCol === column && props.row === 0) {\n    return 'topHex '\n  } else {\n    return ''\n  }\n}\n\nfunction HexRow(props) {\n  const highlightRow = props.highlightRow === props.row\n\n  return (\n    <tr className={'HexRow ' + (highlightRow ? 'hexRowHighlight ' : '')}>\n      {\n        props.hexValues.map((hexValue, column) => {\n          const highlightCol = props.highlightCol === column;\n          const highlightColClass = highlightCol ? 'hexHighlight ' : '';\n          let hoverable = false\n\n          if(hexValue !== config.selectedChar && (highlightRow || highlightCol)) {\n            hoverable = true\n          }\n\n          return <Hex\n            value={hexValue}\n            key={column}\n            onClick={hoverable && props.onClick}\n            row={props.row}\n            col={column}\n            textClass={(hexValue === null ?  'greyText ' : '')}\n            hexClass={\n              ((hoverable && 'hoverable ') || '') +\n                highlightColClass +\n                topHexClass(props, column) +\n                bottomHexClass(props, column)\n            }\n          >\n          </Hex>\n        })\n      }\n    </tr>\n  )\n}\n\nexport default HexRow;\n","import React from 'react';\nimport './Buffer.css';\n\nfunction Buffer(props) {\n  return (\n    <div className=\"Buffer\">\n      {\n        Array(props.bufferLength).fill().map((_,i) => {\n            return(\n              <div className={\"bufferText onBoot-buffer \" +  props.className}key={i}>\n                {\n                  props.buffer.length === i &&\n                    <p key={i} className='blink'>{'|'}</p>\n                }\n                {\n                  props.buffer.length !== i &&\n                    <p key={i}>{props.buffer[i]}</p>\n                }\n              </div>\n            )\n        })\n      }\n    </div>\n  );\n}\n\nexport default Buffer;\n","import React from 'react';\nimport './Objective.css';\n\nfunction Objective(props) {\n  const animateClass = (props.failed || props.success) ? 'noAnimation' : '';\n\n  return (\n    <div className='primaryObjective'>\n      <h3 className='objectiveHeader'>Primary Access</h3>\n      <div className={\"Objective \" + animateClass}>\n        {\n          props.objective.map((value,i) => {\n            const highlightClass = props.progress[i] === value ? 'objectiveHighlight ' : ''\n\n            return(\n              <div\n                className={\n                  \"ObjectiveTextContainer \" +\n                  highlightClass +\n                  (props.failed ? 'objectiveFailed ' : '')\n                }\n                key={i}>\n                <p key={i}>{value}</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Objective;\n","import React from 'react';\nimport './Subroutines.css';\n\nfunction Subroutines(props) {\n  return (\n    <div className={\"Subroutines \" + props.className}>\n      <h4 className='subroutineHeader'>Subroutines</h4>\n      <div className='subroutinesContainer'>\n        {\n          props.subroutines.map((subroutine, subroutineIndex) => {\n            const terminate = props.terminate &&\n              props.subroutinesProgress[subroutineIndex].length !== subroutine.length\n\n            const terminateClass = terminate ? 'subroutineTerminate ' : ''\n            const animateClass = props.terminate ? 'subroutineNoAnimation' : ''\n\n            return (\n              <div\n                key={subroutineIndex}\n                className={\n                  'subroutine ' + terminateClass  +animateClass\n                }\n              >\n                <div className='subroutineValues'>\n                  {\n                    subroutine.map((value, valueIndex) => {\n                      const highlight = props.subroutinesProgress[subroutineIndex][valueIndex] === value\n                        ? 'subroutineObjectiveHighlight'\n                        : ''\n\n                      return(\n                        <div\n                          className={\"subroutineTextContainer \" + highlight}\n                          key={valueIndex}\n                        >\n                          <p key={valueIndex}>{value}</p>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Subroutines;\n","import React from 'react';\nimport HexRow from './HexRow/HexRow'\nimport Buffer from './Buffer/Buffer'\nimport Objective from './Objective/Objective'\nimport Particles from 'react-particles-js';\nimport config from './config'\nimport Subroutines from './Subroutines/Subroutines'\nimport MediaQuery from 'react-responsive'\nimport './App.scss';\n\nclass App extends React.Component {\n  state = this.initialState()\n\n  initialState() {\n    const board = this.generateBoard();\n    const primary = this.generatePrimaryObjective(board);\n    return {\n      board: board,\n      highlightRow: 0,\n      highlightCol: null,\n      buffer: [],\n      primaryObjective: primary,\n      primaryObjectiveProgress: [],\n      subroutines: this.generateSubroutines(board),\n      subroutinesProgress: [[], [], [], []],\n      success: false,\n      failure: false\n    }\n  }\n\n  reset() {\n    this.setState(this.initialState())\n  }\n\n  generateBoard() {\n    let hexValues = Array(config.rows).fill().map(() => this.randomHex())\n\n    return Array(config.rows).fill().map(() =>\n      Array(config.columns).fill().map(() =>\n        hexValues[this.randomIndex()]\n      )\n    )\n  }\n\n  randomHex() {\n    return Math.floor(Math.random() * 256)\n      .toString(16)\n      .toUpperCase()\n      .padStart(2,'0')\n  }\n\n  generatePrimaryObjective(board) {\n    let availableIndices = Array(config.rows).fill().map((_, i) => (i))\n    const column = this.randomIndex()\n    const row1 = this.randomIndex()\n\n    // make sure the same row is not selected to ensure the main objective is\n    // achievable\n    availableIndices = availableIndices.filter((n,_) => ( n !== row1 ))\n    const row2 = availableIndices[\n      Math.floor(Math.random() * availableIndices.length)\n    ]\n\n    // use the same column index twice to guarantee the main objective\n    // is achievable\n    return [\n      board[row1][column],\n      board[row2][column]\n    ]\n  }\n\n  generateSubroutines(board) {\n    return Array(4).fill().map(() => {\n      let subroutineLength = Math.ceil(Math.random() * 3) + 1\n\n      return Array(subroutineLength).fill().map(() => (\n        board[this.randomIndex()][this.randomIndex()]\n      ))\n    })\n  }\n\n  hexClick(row, col) {\n    const board = this.state.board.slice();\n    const buffer = this.state.buffer.slice();\n    const selection = board[row][col];\n    const [highlightRow, highlightCol] = this.refreshHighlights(row, col)\n    let primaryObjectiveProgress = this.calcObjectiveProgress(\n      selection,\n      this.state.primaryObjectiveProgress,\n      this.state.primaryObjective\n    )\n\n    let success = primaryObjectiveProgress.length ===\n      this.state.primaryObjective.length\n\n    buffer.push(selection);\n    board[row][col] = config.selectedChar;\n\n    this.setState({\n      board, highlightRow, highlightCol, buffer, primaryObjectiveProgress,\n      success,\n      failure: !success && buffer.length === config.bufferLength,\n      subroutinesProgress: this.calcSubroutineProgress(selection)\n    })\n  }\n\n  refreshHighlights(row, col) {\n    if (this.state.highlightRow != null) {\n      return [null, col]\n    } else {\n      return [row, null]\n    }\n  }\n\n\n  calcObjectiveProgress(selection, progress, objective) {\n    let primaryObjectiveProgress = progress.slice()\n    const currentGoal = objective[primaryObjectiveProgress.length];\n\n    if (selection === currentGoal) {\n      primaryObjectiveProgress.push(selection)\n    }\n    else if(selection !== objective[0] && progress.length !== objective.length) {\n      primaryObjectiveProgress = []\n    }\n\n    return primaryObjectiveProgress\n  }\n\n  calcSubroutineProgress(selection) {\n    return this.state.subroutinesProgress.map((subroutine, i) => (\n      this.calcObjectiveProgress(\n        selection,\n        subroutine,\n        this.state.subroutines[i]\n      )\n    ))\n  }\n\n  randomIndex() {\n    return Math.floor(Math.random() * config.rows)\n  }\n\n  terminate() {\n    return this.state.success || this.state.failure\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles params={\n          {\n            particles: {\n              number: {\n                value: 100,\n                density: {\n                  enable: true\n                }\n              },\n              color: {\n                value: '#ffffff'\n              },\n              line_linked: {\n                color: '#3bc702',\n                width: 2\n              }\n            }\n          }\n        }/>\n        <div className='centralRow'>\n          <div className='centralContainer'>\n            <div className='objectiveRow'>\n              <Objective\n                objective={this.state.primaryObjective}\n                progress={this.state.primaryObjectiveProgress}\n                failed={this.state.failure}\n                success={this.state.success}\n              />\n\n            <MediaQuery maxWidth={590} >\n                <Subroutines\n                  className='subroutineObjectives'\n                  subroutines={this.state.subroutines}\n                  subroutinesProgress={this.state.subroutinesProgress}\n                  terminate={this.terminate()}\n                />\n              </MediaQuery>\n            </div>\n\n            <div className='centralColumn'>\n              <div className=\"board\">\n                <table className={'table onBoot ' + (this.terminate() ? 'terminate' : '')}>\n                  <tbody>\n                    {\n                      this.state.board.map((hexValues, i) => (\n                        <HexRow\n                          hexValues={hexValues}\n                          key={i}\n                          row={i}\n                          onClick={\n                            this.terminate() ?\n                            null :\n                            (row, col) => this.hexClick(row, col)\n                          }\n                          highlightRow={this.state.highlightRow}\n                          highlightCol={this.state.highlightCol}\n                          >\n                        </HexRow>\n                      ))\n                    }\n                  </tbody>\n                </table>\n\n                {\n                  this.state.success &&\n                  <h1 className='successText glitch terminateText' data-text=\"ACCESS GRANTED\">\n                    ACCESS GRANTED\n                  </h1>\n                }\n\n                {\n                  this.state.failure &&\n                  <h1 className='failureText glitch terminateText' data-text=\"ACCESS DENIED\">\n                    ACCESS DENIED\n                  </h1>\n                }\n\n                {\n                  this.terminate() &&\n                  <h3 className='reboot' onClick={() => this.reset()}>\n                    Reboot\n                  </h3>\n                }\n              </div>\n\n              <Buffer\n                buffer={this.state.buffer}\n                bufferLength={config.bufferLength}\n                className={\n                  'app-buffer ' + (this.terminate() ? 'terminate-buffer' : '')\n                }\n                />\n            </div>\n          </div>\n          <MediaQuery minWidth={590} >\n            <div className='objectiveColumn'>\n              <Subroutines\n                className='subroutineObjectives'\n                subroutines={this.state.subroutines}\n                subroutinesProgress={this.state.subroutinesProgress}\n                terminate={this.terminate()}\n                />\n            </div>\n          </MediaQuery>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}